package org.crypttech.modexp.testgenerator;

import java.util.ArrayList;
import java.util.List;

import org.crypttech.modexp.testgenerator.format.GeneratorC;
import org.crypttech.modexp.testgenerator.format.GeneratorVerilog;
import org.crypttech.modexp.testgenerator.format.ModExpTestFormater;

public class TestGenerator {
	public static void main(String[] argv) throws Exception {
		String basePath;
		if (argv.length == 1)
			basePath = argv[0];
		else
			basePath = "..";
		
		System.out.println("Generating modexp test values.");

		List<TestVector> vectors = new ArrayList<TestVector>();
		vectors.addAll(TestGeneratorBasic.getTestVectors());
		try (GeneratorC genC = new GeneratorC(
				basePath + "/model/c/src/autogenerated_tests.c")) {
			try (GeneratorVerilog genVerilog = new GeneratorVerilog(
					basePath + "/tb/tb_modexp_autogenerated_template.v",
					basePath + "/tb/tb_modexp_autogenerated.v")) {

				emitTests(vectors, genC, genVerilog);
			}
		}

	}

	private static void emitTests(List<TestVector> vectors,
			ModExpTestFormater... generators) {
		for (ModExpTestFormater generator : generators)
			for (TestVector vector : vectors)
				generator.format(vector);
	}
}
